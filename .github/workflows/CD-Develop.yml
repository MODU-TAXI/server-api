name: Develop Profile Deploy

on:
  push:
    branches:
      - MS-2-CI-CD

env:
  REGISTRY: ghcr.io
  ORGANIZATION: modu-taxi
  IMAGE_TAG: server-api:${{ github.sha }}
  GITHUB_ACTOR: ${{ github.actor }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{secrets.TOKEN_GITHUB}}
          submodules: recursive

      - name: Git Submodule
        run: |
          cd config
          git checkout develop

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.GITHUB_ACTOR }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Build
        run: docker build --no-cache -t ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_TAG }} -f Dockerfile-dev .

      - name: Push
        run: docker push ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_TAG }}

      - name: Write Docker Image Tag Information to .env File
        run: |
          echo -e "\nDOCKER_IMAGE_TAG=${{ github.sha }}" >> config/dockerEnv/dev.env

      - name: Copy docker-compose.dev.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.dev.yml,config/dockerEnv/*"
          target: /home/ubuntu

      - name: Check Docker
        id: dockerChecker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker --version
            docker-compose --version

      - name: Install Docker
        if: ${{ failure() && steps.dockerChecker.conclusion == 'failure' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install docker.io
            sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker
            sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker --version
            docker-compose --version

      - name: Deploy
        if: ${{ always() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            sudo docker login ${{ env.REGISTRY }} -u ${{ env.GITHUB_ACTOR }} -p ${{ secrets.TOKEN_GITHUB }}
            sudo docker container stop capple-dev
            sudo docker container rm capple-dev
            sudo docker image rm  ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_TAG }}
            sudo docker-compose --env-file=config/dockerEnv/dev.env -f docker-compose.dev.yml -p backend up -d
