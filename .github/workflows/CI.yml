name: Build Test

on:
  push:
    branches-ignore:
      - develop
      - prod

env:
  REGISTRY: ghcr.io
  ORGANIZATION: modu-taxi
  IMAGE_TAG: ci:${{ github.ref_name }}-${{ github.sha }}
  GITHUB_ACTOR: ${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.TOKEN_GITHUB}}
          submodules: recursive
          
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          
      - name: Submodule Update
        run: git submodule update --remote --recursive
        
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Build with Gradle
        id: buildWithGradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: lowercase the image tag
        run: echo "IMAGE_TAG=$(echo $IMAGE_TAG | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.GITHUB_ACTOR }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Build
        run: docker build --no-cache -t ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_TAG }} -f Dockerfile-CI .

      - name: Push
        run: docker push ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_TAG }}

      - name: Upload Report Artifact When Build Failed
        if: ${{ failure() && steps.buildWithGradle.conclusion == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: report-artifact
          path: ./build/reports/
